Suppose you have deployed your application using a deployment controller. Assume the initial number of replicas is one. Write the steps needed to update a container's image using deployment, making sure that there is zero downtime.

To update a container's image using deployment, making sure that there is zero downtime can be done by applying Rolling update.
Rolling updates allow Deployments' update to take place with zero downtime by incrementally updating Pods instances with new ones.

Steps are as follows:
1. [root@ip-172-31-35-222 ~]# kubectl create deployment nginx --image nginx:1.14.2
deployment.apps/nginx created

2. [root@ip-172-31-35-222 ~]# kubectl get deployments
NAME    READY   UP-TO-DATE   AVAILABLE   AGE
nginx   1/1     1            1           24s

3. [root@ip-172-31-35-222 ~]# kubectl set image deployment.v1.apps/nginx nginx=nginx:1.16.1
deployment.apps/nginx image updated

4. [root@ip-172-31-35-222 ~]# kubectl rollout status deployment/nginx
deployment "nginx" successfully rolled out

5.[root@ip-172-31-35-222 ~]# kubectl describe deployment nginx
Name:                   nginx
Namespace:              default
CreationTimestamp:      Tue, 27 Sep 2022 11:11:52 +0000
Labels:                 app=nginx
Annotations:            deployment.kubernetes.io/revision: 2
Selector:               app=nginx
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
